# .bashrc
export PROMPT_COMMAND=__prompt_command      # Func to gen PS1 after CMDs

# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH:/home2/jpryor/.cargo/bin"
fi
export PATH

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions
alias ppv='puppet parser validate'
alias ppl='puppet-lint'

function __prompt_command() {
  local the_exit_code=${PIPESTATUS[-1]}
  # Source global definitions
  if [ -f /etc/bashrc ]; then
    . /etc/bashrc
  fi

  #acceptable PS1 without git intergration
  #so if you just want this PS1, then uncomment the line below and delete everything below that
  #export PS1="\[\033[01;32m\]\u@\h\[\033[00m\] \[\033[01;34m\]\W\[\033[00m\]\[\033[1;32m\]\$\[\033[m\]"

  . ~/.git-prompt.sh
  export GIT_PS1_SHOWDIRTYSTATE=1

  ### Credit to http://mediadoneright.com/content/ultimate-git-ps1-bash-prompt
  #Customize BASH PS1 prompt to show current GIT repository and branch.
  #  by Mike Stewart - http://MediaDoneRight.com

  #  SETUP CONSTANTS
  #  Bunch-o-predefined colors.  Makes reading code easier than escape sequences.
  #  I don't remember where I found this.  o_O

  # Reset
  Color_Off="\[\033[0m\]"       # Text Reset

  # Regular Colors
  Black="\[\033[0;30m\]"        # Black
  Red="\[\033[0;31m\]"          # Red
  Green="\[\033[0;32m\]"        # Green
  Yellow="\[\033[0;33m\]"       # Yellow
  Blue="\[\033[0;34m\]"         # Blue
  Purple="\[\033[0;35m\]"       # Purple
  Cyan="\[\033[0;36m\]"         # Cyan
  White="\[\033[0;37m\]"        # White

  # Bold
  BBlack="\[\033[1;30m\]"       # Black
  BRed="\[\033[1;31m\]"         # Red
  BGreen="\[\033[1;32m\]"       # Green
  BYellow="\[\033[1;33m\]"      # Yellow
  BBlue="\[\033[1;34m\]"        # Blue
  BPurple="\[\033[1;35m\]"      # Purple
  BCyan="\[\033[1;36m\]"        # Cyan
  BWhite="\[\033[1;37m\]"       # White

  # Underline
  UBlack="\[\033[4;30m\]"       # Black
  URed="\[\033[4;31m\]"         # Red
  UGreen="\[\033[4;32m\]"       # Green
  UYellow="\[\033[4;33m\]"      # Yellow
  UBlue="\[\033[4;34m\]"        # Blue
  UPurple="\[\033[4;35m\]"      # Purple
  UCyan="\[\033[4;36m\]"        # Cyan
  UWhite="\[\033[4;37m\]"       # White

  # Background
  On_Black="\[\033[40m\]"       # Black
  On_Red="\[\033[41m\]"         # Red
  On_Green="\[\033[42m\]"       # Green
  On_Yellow="\[\033[43m\]"      # Yellow
  On_Blue="\[\033[44m\]"        # Blue
  On_Purple="\[\033[45m\]"      # Purple
  On_Cyan="\[\033[46m\]"        # Cyan
  On_White="\[\033[47m\]"       # White

  # High Intensty
  IBlack="\[\033[0;90m\]"       # Black
  IRed="\[\033[0;91m\]"         # Red
  IGreen="\[\033[0;92m\]"       # Green
  IYellow="\[\033[0;93m\]"      # Yellow
  IBlue="\[\033[0;94m\]"        # Blue
  IPurple="\[\033[0;95m\]"      # Purple
  ICyan="\[\033[0;96m\]"        # Cyan
  IWhite="\[\033[0;97m\]"       # White

  # Bold High Intensty
  BIBlack="\[\033[1;90m\]"      # Black
  BIRed="\[\033[1;91m\]"        # Red
  BIGreen="\[\033[1;92m\]"      # Green
  BIYellow="\[\033[1;93m\]"     # Yellow
  BIBlue="\[\033[1;94m\]"       # Blue
  BIPurple="\[\033[1;95m\]"     # Purple
  BICyan="\[\033[1;96m\]"       # Cyan
  BIWhite="\[\033[1;97m\]"      # White

  # High Intensty backgrounds
  On_IBlack="\[\033[0;100m\]"   # Black
  On_IRed="\[\033[0;101m\]"     # Red
  On_IGreen="\[\033[0;102m\]"   # Green
  On_IYellow="\[\033[0;103m\]"  # Yellow
  On_IBlue="\[\033[0;104m\]"    # Blue
  On_IPurple="\[\033[10;95m\]"  # Purple
  On_ICyan="\[\033[0;106m\]"    # Cyan
  On_IWhite="\[\033[0;107m\]"   # White

  # Various variables you might want for your PS1 prompt instead
  Time12h="\T"
  Time12a="\@"
  PathShort=" \w"
  PathFull="\W"
  NewLine="\n"
  Jobs="\j"
  #UserAtHost=" \[\033[01;32m\]\u@\h\[\033[00m\]"
  UserAtHost=" \u@\h"


  # This PS1 snippet was adopted from code for MAC/BSD I saw from: http://allancraig.net/index.php?option=com_content&view=article&id=108:ps1-export-command-for-git&catid=45:general&Itemid=96
  # I tweaked it to work on UBUNTU 11.04 & 11.10 plus made it mo' better

  # If on laptop go Purple, else go Green
  is_laptop=$(echo $HOSTNAME | grep -q 'jpryor-lt')
  is_laptop_ret=$?
  if [ "${is_laptop_ret}" -eq 0 ] ; then
    UserAtHostColors="$BIPurple$UserAtHost$Color_Off"
  else
    UserAtHostColors="$BIGreen$UserAtHost$Color_Off"
  fi

  if [ ${the_exit_code} != 0 ]; then
    the_exit_code_colored="$BIRed${the_exit_code}$Color_Off"
  else
    the_exit_code_colored="$BGreen${the_exit_code}$Color_Off"
  fi
  local trunc_symbol="\[$(tput setaf 1)$(tput bold)\]..."
  
  if [[ -z "$VIRTUAL_ENV" ]]; then
    unset virt_env
  else
#     local virt_env=`printf "($(echo $VIRTUAL_ENV | awk -F "/" '{print $(NF-1)"/"$NF}')) "`;
    local virt_env=`printf "($(echo $VIRTUAL_ENV | awk -F "/" '{print $NF}')) "`;
  fi
#   if [ -f /usr/bin/python3 ] ; then
#     local ppython_version=$(python3 --version 2>&1 | command awk '{print "py-"$2;}')
#     local ppython_version_colored="$White$ppython_version$Color_Off"
#   else
#     local ppython_version_colored=""
#   fi
  
  git branch &>/dev/null
  if [ $? -eq 0 ]; then
    echo `git status` | grep -i 'Changes not staged for commit\|Changes to be committed'  > /dev/null 2>&1
    if [ "$?" -eq "0" ]; then
      local last_commit_hash=$(git log --abbrev-commit --date=relative -n 1 | head -n 1 | awk '{print $2'})
      local last_commit_time=$(git log --date=relative -n 1 | grep '^Date:' | sed -e 's/Date\:\s\s\s//')
      echo "${last_commit_time}" | grep -i hour > /dev/null 2>&1
      if [ "$?" -eq "0" ] ; then
        unset last_commit_time
        unset last_commit_hash
      else
        local last_commit_time_colored="${IYellow}${last_commit_hash} ${last_commit_time}${Color_Off} "
      fi
    fi
  fi

  export PS1=$IBlack$Time12h$Color_Off' '$On_Black$White$virt_env$Color_Off$On_Black$ppython_version_colored$UserAtHostColors$BCyan$PathShort$Color_Off'$(git branch &>/dev/null;\
  if [ $? -eq 0 ]; then \
    echo "$(echo `git status` | grep "nothing to commit" > /dev/null 2>&1; \
    if [ "$?" -eq "0" ]; then \
      # @4 - Clean repository - nothing to commit
      echo "'$Green'"$(__git_ps1 " (%s)"); \
    else \
      # @5 - Changes to working tree
      echo "'$IRed'"$(__git_ps1 " {%s}"); \
    fi) '$last_commit_time_colored$the_exit_code_colored\\n$BGreen\$' '$Color_Off'"; \
  else \
    # @2 - Prompt when not in GIT repo
    echo " '$the_exit_code_colored\\n$BGreen\$' '$Color_Off'"; \
  fi)'
}
